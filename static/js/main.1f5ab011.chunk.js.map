{"version":3,"sources":["components/TodoItem.js","components/AddTodo.js","components/Header.js","components/App.js","index.js"],"names":["TodoItem","props","className","todo","completed","type","checked","onChange","handleChange","id","name","event","handleEdit","target","value","text","onClick","handleDelete","AddTodo","onSubmit","handleSubmit","placeholder","handleNewTodo","Header","toggleTheme","App","setState","prevState","todos","map","filter","e","newTodo","preventDefault","nextId","state","newTodosList","concat","isDarkTheme","todoItems","this","item","todoItem","key","completedItems","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f5ab011.chunk.js","sourcesContent":["import React from 'react';\n\nfunction TodoItem(props) {\n    return (\n        <div className={props.todo.completed ? \"no-focus-outline todo-item completed\" : \"no-focus-outline todo-item\"}>\n            <input \n                type=\"checkbox\" \n                checked={props.todo.completed}\n                onChange={() => props.handleChange(props.todo.id)}\n                className=\"no-focus-outline\"\n            />\n            <input\n                type=\"text\"\n                name=\"textInput\"\n                onChange={(event) => props.handleEdit(props.todo.id, event.target.value)}\n                value={props.todo.text}\n            />\n            <button onClick={() => props.handleDelete(props.todo.id)}>\n                X\n            </button>\n        </div>\n    )\n}\n\nexport default TodoItem;","import React from 'react'\n\nfunction AddTodo(props) {\n    return (\n        <div className=\"add-todo no-focus-outline\">\n            <form onSubmit={props.handleSubmit}>\n                <input \n                    type=\"text\" \n                    placeholder=\"Add new task\" \n                    name=\"newTodo\" \n                    value={props.value} \n                    onChange={props.handleNewTodo}\n                />\n                <button>+</button>\n            </form>\n        </div>\n    )\n}\nexport default AddTodo","import React from 'react'\n\nfunction Header(props) {\n    return(\n        <div className=\"header\">\n            <h1>TO DO LIST</h1>\n            <label className=\"switch\">\n                <input \n                    type=\"checkbox\" \n                    onClick={props.toggleTheme}\n                />\n                <span className=\"slider round\"></span>\n            </label>\n        </div>\n    )\n}\n\nexport default Header","import React from 'react';\nimport TodoItem from './TodoItem';\nimport AddTodo from './AddTodo';\nimport Header from './Header'\nimport '../css/dark-theme.scss';\n\nclass App extends React.Component {\n  \tconstructor() {\n\t\tsuper();\n\t\t\tthis.state = {\n\t\t\ttodos: [\n            {completed: true, id: 1, text: \"Add a new task\"},\n            {completed: false, id: 2, text: \"Edit a task by tapping on the text\"},\n            {completed: true, id: 3, text: \"Mark your task completed\"},\n            {completed: false, id: 4, text: \"Delete a task by tapping X\"},\n            {completed: false, id: 5, text: \"This app won't save your list if you refresh\"},\n         ],\n\t\t\tid: 0,\n         newTodo: \"\",\n         isDarkTheme: true\n\t\t};\n  \t}\n\n   handleChange = (id) => {\n      this.setState(prevState => {\n         const newTodos = prevState.todos.map(todo => {\n            if (todo.id === id) {\n               return {\n                  ...todo,\n                  completed: !todo.completed\n               }\n            }\n            return todo\n         })\n         return {\n            todos: newTodos\n         }\n      })\n   }\n\n   handleDelete = (id) => {\n      this.setState(prevState => {\n         const newTodos = prevState.todos.filter(todo => {\n            return todo.id !== id\n         })\n         return {\n            todos: newTodos\n         }\n      })\n   }\n\n   handleEdit = (id, text) => {\n      this.setState(prevState => {\n         const newTodos = prevState.todos.map(todo => {\n            if (todo.id === id) {\n               return {\n                  ...todo,\n                  text: text\n               }\n            }\n            return todo\n         })\n         return {\n               todos: newTodos\n            }\n      })\n   }\n\n   handleNewTodo = (e) => {\n      this.setState({\n         newTodo: e.target.value\n      })\n   }\n\n   handleSubmit = (e) => {\n      e.preventDefault();\n      const nextId = this.state.id + 1\n      const text = e.target.newTodo.value\n      const newTodo = {\n         id: nextId,\n         text: text,\n         completed: false\n      }\n      const newTodosList = this.state.todos.concat(newTodo)\n      this.setState({\n         todos: newTodosList,\n         id: nextId,\n         newTodo: \"\"\n      })\n   }\n\n   toggleTheme = () => {\n      this.setState({\n         isDarkTheme: !this.state.isDarkTheme\n      })\n   }\n\n   render() {\n      const todoItems = this.state.todos.map(item => {\n         let todoItem\n         if (!item.completed) {\n            todoItem = <TodoItem \n                           key={item.id} \n                           todo={item} \n                           handleChange={this.handleChange} \n                           handleDelete={this.handleDelete}\n                           handleEdit={this.handleEdit}\n                        />\n         }\n         return todoItem\n      })\n      const completedItems = this.state.todos.map(item => {\n         let todoItem\n         if (item.completed) {\n            todoItem = <TodoItem \n                           key={item.id} \n                           todo={item} \n                           handleChange={this.handleChange} \n                           handleDelete={this.handleDelete}\n                           handleEdit={this.handleEdit}\n                        />\n         }\n         return todoItem\n      })\n\n      return (\n         <div className={this.state.isDarkTheme ? \"page\" : \"page light-theme\"}>\n            <Header toggleTheme={this.toggleTheme}/>\n            <AddTodo \n               handleSubmit={this.handleSubmit}\n               value={this.state.newTodo}\n               handleNewTodo={this.handleNewTodo}\n            />\n            <h2 className=\"todo-header\">TO DO</h2>\n            <div className=\"todo-list\">\n               {todoItems}\n            </div>\n            <h2 className=\"completed-header\">COMPLETED</h2>\n            <div className=\"completed-list\">\n               {completedItems}\n            </div>\n         </div>\n      )\n   }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}